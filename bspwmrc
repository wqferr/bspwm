#!/usr/bin/env bash

# Monitors is set in displays

#
#bspc monitor "${primaryMonitor}" -d 1 2 3 4 5 6 7 8 9 0

# Padding is set in panel
#bspc config top_padding 20

# If it is initial setup, run it once
if [[ "${1}" == '' ]]; then
  ~/.config/bspwm/pre_startup

  ~/.config/bspwm/rules

  bspc config border_width 2
  bspc config window_gap 0

  bspc config split_ratio             0.50
  bspc config borderless_monocle      true
  bspc config gapless_monocle         true
  bspc config focus_by_distance       true
  bspc config history_aware_focus     true

  bspc config remove_disabled_monitors true
  bspc config remove_unplugged_monitors true
  bspc config merge_overlapping_monitors true
  rm /tmp/.displays
  ~/.config/bspwm/displays 'once'
  # TODO: Fix this ugly workaround!
  echo "" > /tmp/.desktop
elif [[ "${1}" == 'refresh' ]]; then
  # Kill panel, this fixes issues with monitor (un)pluggin
  [[ $(pgrep -f 'bspwm/panel') ]] && kill $(pgrep -f 'bspwm/panel')
fi

primaryDisplay=$(xrandr | grep primary | awk -F ' ' '{print $1}')
#bspc monitor "${primaryDisplay}" --reset-desktops 1 2 3 4 5 6 7 8 9 0
# TODO: Fix this ugly workaround!
currentDesktop=$(cat /tmp/.desktop)
bspc monitor "${primaryDisplay}" --reset-desktops          
# TODO: Fix this ugly workaround!
bspc desktop -f "${currentDesktop}"

if [[ "${1}" == '' ]]; then
  ~/.config/bspwm/post_startup "${1}" &
elif [[ "${1}" == 'refresh' ]]; then
  ~/.config/bspwm/panel &
  ~/.config/bspwm/change_wallpaper "$(cat /tmp/.wallpaper)" &
fi
